---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";
import { Image } from "astro:assets";
import TableOfContents from "../components/toc/TableOfContents.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;
const {
  readerTitle,
  readerDescription,
  coverImage,
  coverAlt,
  publishedDate,
  updatedDate,
} = Astro.props.data;
const { Content, headings } = await Astro.props.render();
---

<html lang="en">
  <head>
    <BaseHead title={readerTitle} description={readerDescription} />
  </head>

  <body class="flex w-full flex-col items-center bg-base-100">
    <Header />
    <main class="flex w-full max-w-screen-xl flex-col items-center px-6 py-12">
      <article class="flex w-full flex-col items-center">
        <Image
          class="mb-6 h-auto w-full max-w-full rounded-2xl"
          src={coverImage}
          alt={coverAlt}
        />
        <div
          class="prose prose-sm w-full sm:prose-base lg:prose-lg dark:prose-invert"
        >
          <p class="text-center text-info-content">
            Posted on: <FormattedDate date={publishedDate} />{
              updatedDate && (
                <>
                  - Updated on: <FormattedDate date={updatedDate} />
                </>
              )
            }
          </p>
          <h1 class="text-center text-base-content">{readerTitle}</h1>
          <p class="text-center text-info-content">{readerDescription}</p>
          <hr />
          <TableOfContents headings={headings} />
          <hr />
          <Content />
        </div>
      </article>
      <Footer />
    </main>
  </body>
</html>
