---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";


export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;
const { readerTitle, readerDescription, coverImage, coverAlt, publishedDate, updatedDate } = Astro.props.data;
const { Content } = await Astro.props.render();
---


<html lang='en'>
  <head>
    <BaseHead title={readerTitle} description={readerDescription} />
  </head>


  <body class='flex flex-col items-center w-full bg-base-100'>
    <Header />
    <main class='flex flex-col items-center w-full max-w-[1360px] py-12 px-6'>
      <article class='flex flex-col items-center w-full'>
        <img class='w-full max-w-full h-auto rounded-2xl' src={coverImage} alt={coverAlt} />
        <div class='flex flex-row gap-4'>
          <p>
            Posted on: <FormattedDate date={publishedDate} />{
              updatedDate && (
                <>
                  - Updated on: <FormattedDate date={updatedDate} />
                </>
              )
            }
          </p>
        </div>
        <h1 class='text-5xl text-base-content'>{readerTitle}</h1>
        <p class='text-base-content'>{readerDescription}</p>
        <hr />
        <div class='w-full max-w-full'>
          <Content />
        </div>
      </article>
      <Footer />
    </main>
  </body>
</html>