---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;
const { readerTitle, readerDescription, coverImage, coverAlt, publishedDate, updatedDate } = Astro.props.data;
const { Content } = await Astro.props.render();
---

<html lang='en'>
  <head>
    <BaseHead title={readerTitle} description={readerDescription} />
  </head>

  <body class='flex flex-col items-center w-full bg-base-100'>
    <Header />
    <main class='flex flex-col items-center w-full max-w-[1360px] py-12 px-6'>
      <article class='flex flex-col items-center w-full'>
        <img class='w-full max-w-full h-auto mb-6' src={coverImage} alt={coverAlt} />
        <div class='prose prose-sm sm:prose-base lg:prose-lg dark:prose-invert w-full'>
          <p class='text-info-content text-center'>
            Posted on: <FormattedDate date={publishedDate} />{
              updatedDate && (
                <>
                  - Updated on: <FormattedDate date={updatedDate} />
                </>
              )
            }
          </p>
          <h1 class='text-base-content text-center'>{readerTitle}</h1>
          <p class='text-info-content text-center'>{readerDescription}</p>
          <hr />
          <Content />
        </div>
      </article>
      <Footer />
    </main>
  </body>
</html>
